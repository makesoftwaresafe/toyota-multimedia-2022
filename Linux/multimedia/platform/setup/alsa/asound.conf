#---OUTPUT DEVICES
pcm.entertainment_main "switch:entertainment_main"
ctl.entertainment_main hardware
pcm.entertainment_rear "switch:entertainment_rear"
ctl.entertainment_rear hardware
pcm.entertainment_main_hw "switch:entertainment_main,nosvol"
ctl.entertainment_main_hw hardware
pcm.interrupt switch:interrupt
ctl.interrupt hardware
pcm.alert switch:alert
ctl.alert hardware
pcm.handsfree_out switch:handsfree_out
ctl.handsfree_out hardware
pcm.hardware_out hardware:hardware_main.out
ctl.hardware_out hardware

#---INPUT DEVICES
pcm.line_in switch:line_in
ctl.line_in hardware
pcm.microphone switch:microphone
ctl.microphone hardware
pcm.handsfree_in switch:microphone
ctl.handsfree_in hardware
pcm.hardware_in hardware:hardware_main.in
ctl.hardware_in hardware

#get hardware name
</etc/asound_defaults.conf>
</etc/asound_board.conf>

@hooks [
	{
		func load
		files [
			"/etc/alsa.conf.d/"
			"/tmp/asound-test.conf"
		]
		errors false
	}
]

adit.hardware_main.out.card adit.hardware_main.card
adit.hardware_main.in.card adit.hardware_main.card


# disable default device to find smoke tests
# which are using the default device
pcm.!default {
}


#main switch: optionally insert file plugin. pass svol option to next node...
pcm.switch {
	@args [ NAME SVOL ]
	@args.NAME.type string
	@args.SVOL {
		type string
		default "svol"
	}
	type empty
	slave.pcm { @func concat strings [ "common" { @func getenv vars [ $NAME ] default ""} ":" $NAME "," $SVOL ] }
}


pcm.commonfile {
	@args [ NAME SVOL ]
	@args.NAME.type string
	@args.SVOL {
		type string
	}

	type file
	format wav
	file { @func concat strings [ "/tmp/dump_" $NAME ".wav" ] }
	truncate false
	slave.pcm { @func concat strings [ "common:" $NAME "," $SVOL ] }
}

pcm.common {
	@args [ NAME SVOL]
	@args.NAME.type string
	@args.SVOL.type string
	type plug
	route_policy "average"
	slave.pcm {
		type empty
		slave.pcm {@func concat strings [ ll $SVOL : $NAME ] }
	}
}

pcm.llsvol {
	@args [ NAME ]
	@args.NAME.type string
	type softvol
	slave.pcm {@func concat strings [ ll: $NAME ] }
	control.name $NAME
	control.card { @func refer name "adit.hardware_main.card" }
}

pcm.llnosvol ll

#low level entry
pcm.ll {
	@args [ NAME ]
	@args.NAME.type string
	type empty
	slave.pcm { @func refer name { @func concat strings [ "adit." $NAME ] } }
}

pcm.mmap_exclusive {
	@args [ NAME ]
	@args.NAME.type string
	type mmap_emul
	slave.pcm { @func concat strings [ "exclusive:" $NAME ] }
}

pcm.exclusive hardware

pcm.shared {
	@args [PCM TYPE BIND]
	@args.PCM {
		type string
	}
	@args.TYPE {
		type string
	}
	@args.BIND {
		type string
	}
	type $TYPE
	ipc_key { @func refer name { @func concat strings [ "adit." $PCM ".ipc_key"]}}
	ipc_perm 0660
	ipc_gid audio
	bindings { @func refer name $BIND }

	slave {
		pcm { @func concat strings [ "hardware:" $PCM ] }
		channels { @func refer name { @func concat strings [ "adit." $PCM ".channels" ] }}
		buffer_time { @func refer name "adit.buffer_time" }
		period_time { @func refer name "adit.period_time" }
	}
}

pcm.hardware {
	@args [ NAME ]                                                                                               
	@args.NAME.type string
	type hw
	card { @func refer name { @func concat strings [ "adit." $NAME ".card" ] }}
	device { @func refer name { @func concat strings [ "adit." $NAME ".device" ] }} 
	channels { @func refer name { @func concat strings [ "adit." $NAME ".channels" ] }}
	rate 48000
	format { @func refer name { @func concat strings [ "adit." $NAME ".sample_format" ] }}
}

ctl.hardware {
	type hw
	card { @func refer name { @func concat strings [ "adit.hardware_main.card" ] }}
}
